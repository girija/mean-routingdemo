{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/comp1/comp1.component.css","webpack:///./src/app/comp1/comp1.component.html","webpack:///./src/app/comp1/comp1.component.ts","webpack:///./src/app/comp2/comp2.component.css","webpack:///./src/app/comp2/comp2.component.html","webpack:///./src/app/comp2/comp2.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { Comp1Component } from './comp1/comp1.component';\nimport { Comp2Component } from './comp2/comp2.component';\n\nconst routes: Routes = [{path:'comp1',component: Comp1Component},\n                        {path:'comp2',component: Comp2Component}\n                        ];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\"><a routerLink=\\\"/comp1\\\" routerLinkActive=\\\"active\\\">Link To Comp1</a></div>\\n    <div class=\\\"col-md-3\\\"></div>\\n    <div class=\\\"col-md-3\\\"></div>\\n    <div class=\\\"col-md-3\\\"><router-outlet></router-outlet></div>\\n  </div>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { Comp1Component } from './comp1/comp1.component';\nimport { Comp2Component } from './comp2/comp2.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    Comp1Component,\n    Comp2Component\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  comp1 works!\\n</p>\\n<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"goto_comp2()\\\">Goto Comp2 Without Parameter</button>\\n\\n<button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"goto_comp2_query()\\\">Goto Comp2 With Query Parameter</button>\\n\\n<a [routerLink]=\\\"['/comp2']\\\" [queryParams]=\\\"{ order: 'popular'}\\\">\\n  comp2 \\n</a>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\n\n@Component({\n  selector: 'app-comp1',\n  templateUrl: './comp1.component.html',\n  styleUrls: ['./comp1.component.css']\n})\nexport class Comp1Component implements OnInit {\n\n  constructor(private router:Router) { }\n\n  ngOnInit() {\n  }\n  goto_comp2(){\n\n    \n\n    this.router.navigate([\"comp2\"]);\n  }\n\n  goto_comp2_query(){\n\n    // let naviagationExtras:NavigationExtras={\n    //   queryParams: {\n    //     {'sport':'Basketball'}\n    //   }\n    // }\n\n    this.router.navigate([\"comp2\"], {queryParams: { sport: 'Basketball', date: '20-05-1018' } });\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  comp2 works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-comp2',\n  templateUrl: './comp2.component.html',\n  styleUrls: ['./comp2.component.css']\n})\nexport class Comp2Component implements OnInit {\n\n  constructor(private activityroute:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.activityroute.queryParams\n    .subscribe(params => {\n     this. doThis(params.sport);\n      \n    })\n  }\n\n  doThis(anything:String){\n    console.log(anything);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}